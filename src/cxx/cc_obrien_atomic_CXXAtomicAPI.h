/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cc_obrien_atomic_CXXAtomicAPI */

#ifndef _Included_cc_obrien_atomic_CXXAtomicAPI
#define _Included_cc_obrien_atomic_CXXAtomicAPI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    getBufferAddress
 * Signature: (Ljava/nio/Buffer;)J
 */
JNIEXPORT jlong JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_getBufferAddress
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    load32
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_load32
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    store32
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_store32
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    exchange32
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_exchange32
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchAdd32
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchAdd32
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchAnd32
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchAnd32
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchOr32
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchOr32
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchXor32
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchXor32
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    compareAndSet32
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_compareAndSet32
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    load64
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_load64
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    store64
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_store64
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    exchange64
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_exchange64
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchAdd64
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchAdd64
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchAnd64
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchAnd64
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchOr64
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchOr64
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    fetchXor64
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_fetchXor64
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_obrien_atomic_CXXAtomicAPI
 * Method:    compareAndSet64
 * Signature: (JJJ)Z
 */
JNIEXPORT jboolean JNICALL Java_cc_obrien_atomic_CXXAtomicAPI_compareAndSet64
  (JNIEnv *, jclass, jlong, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
